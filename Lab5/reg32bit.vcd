$date
	Wed Nov 07 23:42:16 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb32reg $end
$var wire 32 ! q [31:0] $end
$var reg 1 " clk $end
$var reg 32 # d [31:0] $end
$var reg 1 $ reset $end
$scope module R $end
$var wire 1 " clk $end
$var wire 32 % d [31:0] $end
$var wire 1 $ reset $end
$var wire 32 & q [31:0] $end
$scope begin mux_loop[0] $end
$scope module df $end
$var wire 1 " clk $end
$var wire 4 ' d [3:0] $end
$var wire 1 $ reset $end
$var reg 4 ( q [3:0] $end
$upscope $end
$upscope $end
$scope begin mux_loop[4] $end
$scope module df $end
$var wire 1 " clk $end
$var wire 4 ) d [3:0] $end
$var wire 1 $ reset $end
$var reg 4 * q [3:0] $end
$upscope $end
$upscope $end
$scope begin mux_loop[8] $end
$scope module df $end
$var wire 1 " clk $end
$var wire 4 + d [3:0] $end
$var wire 1 $ reset $end
$var reg 4 , q [3:0] $end
$upscope $end
$upscope $end
$scope begin mux_loop[12] $end
$scope module df $end
$var wire 1 " clk $end
$var wire 4 - d [3:0] $end
$var wire 1 $ reset $end
$var reg 4 . q [3:0] $end
$upscope $end
$upscope $end
$scope begin mux_loop[16] $end
$scope module df $end
$var wire 1 " clk $end
$var wire 4 / d [3:0] $end
$var wire 1 $ reset $end
$var reg 4 0 q [3:0] $end
$upscope $end
$upscope $end
$scope begin mux_loop[20] $end
$scope module df $end
$var wire 1 " clk $end
$var wire 4 1 d [3:0] $end
$var wire 1 $ reset $end
$var reg 4 2 q [3:0] $end
$upscope $end
$upscope $end
$scope begin mux_loop[24] $end
$scope module df $end
$var wire 1 " clk $end
$var wire 4 3 d [3:0] $end
$var wire 1 $ reset $end
$var reg 4 4 q [3:0] $end
$upscope $end
$upscope $end
$scope begin mux_loop[28] $end
$scope module df $end
$var wire 1 " clk $end
$var wire 4 5 d [3:0] $end
$var wire 1 $ reset $end
$var reg 4 6 q [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 6
b1111 5
bx 4
b1111 3
bx 2
b1111 1
bx 0
b1111 /
bx .
b1111 -
bx ,
b1111 +
bx *
b1111 )
bx (
b1111 '
bx &
b11111111111111111111111111111111 %
1$
b11111111111111111111111111111111 #
1"
bx !
$end
#1
b0 6
b0 4
b0 2
b0 0
b0 .
b0 ,
b0 *
b0 !
b0 &
b0 (
0$
#5
0"
#10
1"
#15
0"
#20
1"
#21
1$
#25
0"
#30
b1111 (
b1111 *
b1111 ,
b1111 .
b1111 0
b1111 2
b1111 4
b11111111111111111111111111111111 !
b11111111111111111111111111111111 &
b1111 6
1"
#35
0"
#40
1"
#41
b1010 )
b1010 -
b1010 1
b1010 5
b10101111101011111010111110101111 #
b10101111101011111010111110101111 %
#45
0"
#50
b1010 *
b1010 .
b1010 2
b10101111101011111010111110101111 !
b10101111101011111010111110101111 &
b1010 6
1"
#55
0"
#60
1"
#65
0"
#70
1"
#75
0"
#80
1"
#81
b0 (
b0 *
b0 ,
b0 .
b0 0
b0 2
b0 4
b0 !
b0 &
b0 6
0$
#85
0"
#90
1"
#95
0"
#100
1"
#105
0"
#110
1"
#115
0"
#120
1"
#125
0"
#130
1"
#135
0"
#140
1"
#145
0"
#150
1"
#155
0"
#160
1"
#161
1$
#165
0"
#170
b1010 6
b1111 4
b1010 2
b1111 0
b1010 .
b1111 ,
b1010 *
b10101111101011111010111110101111 !
b10101111101011111010111110101111 &
b1111 (
1"
#175
0"
#180
1"
#185
0"
#190
1"
#195
0"
#200
1"
#205
0"
#210
1"
#215
0"
#220
1"
#225
0"
#230
1"
#235
0"
#240
1"
#245
0"
#250
1"
#255
0"
#260
1"
#265
0"
#270
1"
#275
0"
#280
1"
#281
b0 6
b0 4
b0 2
b0 0
b0 .
b0 ,
b0 *
b0 !
b0 &
b0 (
0$
#285
0"
#290
1"
#295
0"
#300
1"
#305
0"
#310
1"
#315
0"
#320
1"
#325
0"
#330
1"
#335
0"
#340
1"
#345
0"
#350
1"
#355
0"
#360
1"
#365
0"
#370
1"
#375
0"
#380
1"
#385
0"
#390
1"
#395
0"
#400
1"
#405
0"
#410
1"
#415
0"
#420
1"
#425
0"
#430
1"
#431
1$
#435
0"
#440
b1010 6
b1111 4
b1010 2
b1111 0
b1010 .
b1111 ,
b1010 *
b10101111101011111010111110101111 !
b10101111101011111010111110101111 &
b1111 (
1"
#445
0"
#450
1"
#455
0"
#460
1"
#465
0"
#470
1"
#475
0"
#480
1"
#485
0"
#490
1"
#495
0"
#500
1"
#505
0"
#510
1"
#515
0"
#520
1"
#525
0"
#530
1"
#535
0"
#540
1"
#545
0"
#550
1"
#555
0"
#560
1"
#565
0"
#570
1"
#575
0"
#580
1"
#585
0"
#590
1"
#595
0"
#600
1"
#605
0"
#610
1"
#615
0"
#620
1"
#625
0"
#630
1"
#631
